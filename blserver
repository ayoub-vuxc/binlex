#!/usr/bin/env python

import json
import argparse
import pybinlex
from flask import Flask, request
from hashlib import sha256

__author__ = '@c3rb3ru5d3d53c'
__version__ = '1.1.1'

app = Flask(__name__)

parser = argparse.ArgumentParser(
    prog=f'blserver v{__version__}',
    description='Binlex Web API',
    epilog=f'Author: {__author__}'
)

parser.add_argument(
    '--version',
    action='version',
    version=f'v{__version__}'
)

parser.add_argument(
    '--host',
    default='127.0.0.1',
    required=False,
    help='Host'
)

parser.add_argument(
    '-p',
    '--port',
    default=8080,
    type=int,
    required=False
)
parser.add_argument(
    '-d',
    '--debug',
    action='store_true',
    required=False
)

args = parser.parse_args()

@app.route('/api/v1/raw/x86', methods=['POST'])
def rawx86():
    data = request.data
    if len(data) <= 0: return json.dumps([])
    f = pybinlex.Raw()
    # f.read_vector TODO: pass bytes here
    disasm = pybinlex.disassemble(f)
    disasm.set_mode(pybinlex.BINARY_ARCH.BINARY_ARCH_X86, pybinlex.BINARY_MODE.BINARY_MODE_32)
    return disasm.get_traits()

if __name__ in '__main__':
    app.run(debug=args.debug, host=args.host, port=args.port)
